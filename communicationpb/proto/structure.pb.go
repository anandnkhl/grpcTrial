// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structure.proto

package communicationpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommunicationRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommunicationRequest) Reset()         { *m = CommunicationRequest{} }
func (m *CommunicationRequest) String() string { return proto.CompactTextString(m) }
func (*CommunicationRequest) ProtoMessage()    {}
func (*CommunicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f25f331c538a6a0, []int{0}
}

func (m *CommunicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationRequest.Unmarshal(m, b)
}
func (m *CommunicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationRequest.Marshal(b, m, deterministic)
}
func (m *CommunicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationRequest.Merge(m, src)
}
func (m *CommunicationRequest) XXX_Size() int {
	return xxx_messageInfo_CommunicationRequest.Size(m)
}
func (m *CommunicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationRequest proto.InternalMessageInfo

func (m *CommunicationRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//home/nikhil/go/src/grpcTrial/proto/structure.proto
type CommunicationResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommunicationResponse) Reset()         { *m = CommunicationResponse{} }
func (m *CommunicationResponse) String() string { return proto.CompactTextString(m) }
func (*CommunicationResponse) ProtoMessage()    {}
func (*CommunicationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f25f331c538a6a0, []int{1}
}

func (m *CommunicationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationResponse.Unmarshal(m, b)
}
func (m *CommunicationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationResponse.Marshal(b, m, deterministic)
}
func (m *CommunicationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationResponse.Merge(m, src)
}
func (m *CommunicationResponse) XXX_Size() int {
	return xxx_messageInfo_CommunicationResponse.Size(m)
}
func (m *CommunicationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationResponse proto.InternalMessageInfo

func (m *CommunicationResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*CommunicationRequest)(nil), "communication.communicationRequest")
	proto.RegisterType((*CommunicationResponse)(nil), "communication.communicationResponse")
}

func init() { proto.RegisterFile("structure.proto", fileDescriptor_1f25f331c538a6a0) }

var fileDescriptor_1f25f331c538a6a0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2e, 0x29, 0x2a,
	0x4d, 0x2e, 0x29, 0x2d, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4d, 0xce, 0xcf,
	0xcd, 0x2d, 0xcd, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x53, 0xd2, 0xe0, 0x12, 0x41, 0x11,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0xce, 0x2d, 0x4e, 0x97, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0xf4, 0xb9, 0x44, 0xd1, 0x54, 0x16, 0x17, 0xe4,
	0xe7, 0x15, 0xa7, 0x0a, 0x89, 0x71, 0xb1, 0x15, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x40, 0x55, 0x43,
	0x79, 0x46, 0x29, 0x5c, 0x3c, 0x41, 0xa9, 0x05, 0x39, 0x95, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9,
	0xa9, 0x42, 0x21, 0x5c, 0xac, 0xe9, 0x45, 0xa9, 0xa9, 0x25, 0x42, 0xca, 0x7a, 0x28, 0x06, 0xe9,
	0x61, 0x73, 0x80, 0x94, 0x0a, 0x7e, 0x45, 0x10, 0xbb, 0x95, 0x18, 0x9c, 0x04, 0xa3, 0xf8, 0x51,
	0xa4, 0x0a, 0x92, 0x92, 0xd8, 0xc0, 0x3e, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x2e,
	0x47, 0x60, 0xfc, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReplyServiceClient is the client API for ReplyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplyServiceClient interface {
	Greet(ctx context.Context, in *CommunicationRequest, opts ...grpc.CallOption) (*CommunicationResponse, error)
}

type replyServiceClient struct {
	cc *grpc.ClientConn
}

func NewReplyServiceClient(cc *grpc.ClientConn) ReplyServiceClient {
	return &replyServiceClient{cc}
}

func (c *replyServiceClient) Greet(ctx context.Context, in *CommunicationRequest, opts ...grpc.CallOption) (*CommunicationResponse, error) {
	out := new(CommunicationResponse)
	err := c.cc.Invoke(ctx, "/communication.ReplyService/greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplyServiceServer is the server API for ReplyService service.
type ReplyServiceServer interface {
	Greet(context.Context, *CommunicationRequest) (*CommunicationResponse, error)
}

// UnimplementedReplyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReplyServiceServer struct {
}

func (*UnimplementedReplyServiceServer) Greet(ctx context.Context, req *CommunicationRequest) (*CommunicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}

func RegisterReplyServiceServer(s *grpc.Server, srv ReplyServiceServer) {
	s.RegisterService(&_ReplyService_serviceDesc, srv)
}

func _ReplyService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommunicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplyServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/communication.ReplyService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplyServiceServer).Greet(ctx, req.(*CommunicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "communication.ReplyService",
	HandlerType: (*ReplyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "greet",
			Handler:    _ReplyService_Greet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "structure.proto",
}
